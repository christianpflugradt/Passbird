image: eclipse-temurin:21-jdk

stages:
  - 🔎 check
  - ✅ test
  - 📘 report
  - 📦 release

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

sast:
    stage: 🔎 check

secret_detection:
  stage: 🔎 check

variables:
  DEPENDENCY_CHECK_DATA_LOCATION: /cache/owasp
  GRADLE_USER_HOME: /cache
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.logging.level=warn"
  SAST_JAVA_VERSION: 17

🛠 compile:
  stage: 🔎 check
  script: ./gradlew compileKotlin compileTestKotlin compileJava compileTestJava

🛡️ owasp:
  stage: 🔎 check
  script: JAVA_OPTS="-Xms1g -Xmx2g" ./gradlew dependencyCheckAnalyze
  artifacts:
    paths: [ build/reports/dependency-check-report.html ]
  allow_failure: true
  except: [ tags ]

✏️ ktlint:
  stage: 🔎 check
  script: ./gradlew ktlintCheck
  artifacts:
    paths: [ build/reports/ktlint/* ]

📜 license-check:
  stage: 🔎 check
  script: ./gradlew validateLicenses

🗃 unit-tests:
  stage: ✅ test
  script: ./gradlew test
  needs: [ 🛠 compile]
  artifacts:
    paths:
      - build/reports/tests/test/*
      - build/jacoco/test.exec

🔗 integration-tests:
  stage: ✅ test
  script: ./gradlew integration
  needs: [ 🛠 compile]
  artifacts:
    paths:
      - build/reports/tests/integration/*
      - build/jacoco/integration.exec

🧱 architecture-tests:
  stage: ✅ test
  script: ./gradlew architecture
  needs: [ 🛠 compile]
  artifacts:
    paths:
      - build/reports/tests/architecture/*

🏆 test-coverage-verification:
  stage: 📘 report
  script: ./gradlew jacocoTestCoverageVerification
  needs:
    - 🗃 unit-tests
    - 🔗 integration-tests
    - 🧱 architecture-tests

📊 test-coverage-report:
  stage: 📘 report
  coverage: '/Branch Coverage: \d+\.?\d*/'
  script: ./gradlew -Dorg.gradle.caching=false -Dorg.gradle.logging.level=info jacocoTestReport
  needs:
    - 🗃 unit-tests
    - 🔗 integration-tests
    - 🧱 architecture-tests
  artifacts:
    paths: [ build/reports/jacoco/test/html/* ]

🚀 semver:
  stage: 📦 release
  image: node:24
  variables:
      GIT_STRATEGY: clone
  script: |
    npm install \
      semantic-release@24.2.5 \
      @semantic-release/gitlab@13.2.5 \
      conventional-changelog-conventionalcommits@9.0.0 \
    && npx semantic-release
  when: manual
  only: [ main ]
