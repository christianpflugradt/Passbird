name: build
run-name: "verifying ${{ github.ref_name }}: \"${{ github.event.head_commit.message }}\""

on:
    push:
    workflow_dispatch:

jobs:

  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: gradle/gradle-build-action@v2
      - name: compile code
        run: ./gradlew compileKotlin compileTestKotlin compileJava compileTestJava
      - uses: actions/upload-artifact@v4
        with:
          name: compile
          path: build

  ktlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: lint code
        run: ./gradlew ktlintCheck
      - uses: actions/upload-artifact@v4
        with:
          name: ktlint-reports
          path: build/reports/ktlint/*

  unit-tests:
    runs-on: ubuntu-latest
    needs: [ compile ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: gradle/gradle-build-action@v2
      - uses: actions/download-artifact@v4
        with:
          name: compile
          path: build
      - name: run unit tests
        run: ./gradlew test
      - uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: build/reports/tests/test/*
      - uses: actions/upload-artifact@v4
        with:
          name: unit-test-execution-data
          path: build/jacoco/test.exec

  integration-tests:
    runs-on: ubuntu-latest
    needs: [ compile ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: gradle/gradle-build-action@v2
      - uses: actions/download-artifact@v4
        with:
          name: compile
          path: build
      - name: run integration tests
        run: ./gradlew integration
      - uses: actions/upload-artifact@v4
        with:
          name: integration-test-report
          path: build/reports/tests/integration/*
      - uses: actions/upload-artifact@v4
        with:
          name: integration-test-execution-data
          path: build/jacoco/integration.exec

  architecture-tests:
    runs-on: ubuntu-latest
    needs: [ compile ]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: gradle/gradle-build-action@v2
      - uses: actions/download-artifact@v4
        with:
          name: compile
          path: build
      - name: run architecture tests
        run: ./gradlew architecture
      - uses: actions/upload-artifact@v4
        with:
          name: architecture-test-report
          path: build/reports/tests/architecture/*

  test-coverage-verification:
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - integration-tests
      - architecture-tests
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: gradle/gradle-build-action@v2
      - uses: actions/download-artifact@v4
        with:
          name: compile
          path: build
      - uses: actions/download-artifact@v4
        with:
          name: unit-test-execution-data
          path: build/jacoco/test.exec
      - uses: actions/download-artifact@v4
        with:
          name: integration-test-execution-data
          path: build/jacoco/integration.exec
      - name: verify code coverage
        # for some reason downloaded test execution data is not used, so we'll run all tests again for jacoco to work
        run: ./gradlew test integration jacocoTestCoverageVerification

  test-coverage-report:
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - integration-tests
      - architecture-tests
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: gradle/gradle-build-action@v2
      - uses: actions/download-artifact@v4
        with:
          name: compile
          path: build
      - uses: actions/download-artifact@v4
        with:
          name: unit-test-execution-data
          path: build/jacoco/test.exec
      - uses: actions/download-artifact@v4
        with:
          name: integration-test-execution-data
          path: build/jacoco/integration.exec
      - name: create code coverage report
        # for some reason downloaded test execution data is not used, so we'll run all tests again for jacoco to work
        run: ./gradlew test integration jacocoTestReport
      - uses: actions/upload-artifact@v4
        with:
          name: test-coverage-report
          path: build/reports/jacoco/test/html/*
